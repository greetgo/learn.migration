def nowDate = new Date()
def nowFormattedDate = nowDate.format("yyyy-MM-dd/HH:mm:ss")
def vendorName = "greetgo!"
def ggRepo = System.getenv('GG_REPO')

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'

version = '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "kz.greetgo.learn.migration"

dependencies {
  ext.findbugsVersion = "2.0.1"

  testCompile "org.testng:testng:6.5.1"
  testCompile "org.easytesting:fest-assert-core:2.0M10"

  compile "com.google.code.findbugs:annotations:$findbugsVersion"

  compile group: 'org.postgresql', name: 'postgresql', version: '42.0.0'
}

jar {
  manifest {
    attributes 'Implementation-Title': project.name, 'Implementation-Version': version,
        'Implementation-Vendor': vendorName, 'Built-By': System.getProperty("user.name"), 'Built-At': nowFormattedDate
  }
}

repositories {
  mavenLocal()
  if (ggRepo != null && ggRepo.length() > 0) maven { url ggRepo }
  mavenCentral()
}

sourceSets {
  main {
    java.srcDirs = ["src"]
    resources.srcDirs = ["src", "src_resources"]
    output.resourcesDir = "build/classes/main"
  }
  test {
    java.srcDirs = ["test_src"]
    resources.srcDirs = ["test_src", "test_resources"]
    output.resourcesDir = "build/classes/test"
  }
}

//noinspection GroovyMissingReturnStatement
test { useTestNG() }

task launchMigration(type: JavaExec, group: 'launch') {
  main = 'kz.greetgo.learn.migration.core.LaunchMigration'
  args = []

  classpath { [sourceSets.main.runtimeClasspath, sourceSets.test.runtimeClasspath] }
}

task generateCiaData(type: JavaExec, group: 'launch') {
  main = 'kz.greetgo.learn.migration.__prepare__.GenerateCiaData'
  args = ["250_000"]

  classpath { [sourceSets.main.runtimeClasspath, sourceSets.test.runtimeClasspath] }
}

task dropCreateOperDb(type: JavaExec, group: 'launch') {
  main = 'kz.greetgo.learn.migration.__prepare__.DropCreateOperDb'
  args = []

  classpath { [sourceSets.main.runtimeClasspath, sourceSets.test.runtimeClasspath] }
}

task dropCreateCiaDb(type: JavaExec, group: 'launch') {
  main = 'kz.greetgo.learn.migration.__prepare__.DropCreateCiaDb'
  args = []

  classpath { [sourceSets.main.runtimeClasspath, sourceSets.test.runtimeClasspath] }
}
